name: Deploy React App to Azure Web App

on:
  push:
    branches: main

jobs:
  build_and_deploy:
    name: Build and Deploy React App to Azure Web App
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Check out the repo
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (assumed the React app uses Node.js for building)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the React application
      - name: Build React app
        run: npm run build

      # # Step 5: Upload build artifacts (Optional, for debugging)
      # - name: 'Deploy to Azure Web App'
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: 'ReactAppDemo' # Replace with the name of your Azure Web App
      #     publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
      #     package: './build' # Path to the build folder that was created by npm run build
      
      - name: 'Deploy to Azure Web App Slot'
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'ReactAppDemo'  # Replace with the name of your Azure Web App
          slot-name: 'staging'  # Replace with your slot name (e.g., staging)
          publish-profile: ${{ secrets.AZURE_WEBAPP_SLOT_PUBLISH_PROFILE }}
          package: './build'  # Path to the build folder created by npm run build

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      # # Optional Step 6: Swap the Slot with Production
      - name: 'Swap staging slot with production'
        run: |
          az webapp deployment slot swap --name 'ReactAppDemo' --resource-group 'bluegreendeployment' --slot 'staging' --target-slot 'production'
        # env:
        #   AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
