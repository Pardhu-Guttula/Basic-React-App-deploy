name: Publish Docker image

on:
  push:
    branches: main

jobs:
  push_to_registry:
    name: Deploy Docker image in Azure VM
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: pardhuguttula/react-img

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Deploy to Azure VM
        env:
          AZURE_VM_IP: ${{ secrets.AZURE_VM_IP }}
          AZURE_SSH_USERNAME: ${{ secrets.AZURE_SSH_USERNAME }}
          AZURE_SSH_KEY: ${{ secrets.AZURE_SSH_KEY }}
        run: |
          echo "${AZURE_SSH_KEY}" > private_key
          chmod 600 private_key

          ssh -i private_key -o StrictHostKeyChecking=yes $AZURE_SSH_USERNAME@$AZURE_VM_IP << 'EOF'
            # Log in to Docker Hub
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin

            if [ "$(docker ps -q -f name=my-react-app-container)" ]; then
              echo "Stopping and removing the existing container..."
              docker stop my-react-app-container
              docker rm my-react-app-container
            fi

            # Pull the Docker image
            docker pull pardhuguttula/react-img:main

            # Run the Docker container
            docker run -d -p 5000:5000 --name my-react-app-container pardhuguttula/react-img:latest
          EOF

          # Clean up
          rm private_key
