name: Deploy React App to Azure Web App via Docker

on:
  push:
    branches: main

jobs:
  build_and_deploy:
    name: Build, Push Docker Image to Docker Hub and Deploy to Azure
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/react-img:latest .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/react-img:latest

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Staging Slot
        run: |
          az webapp deployment slot create --name ReactAppDemo --resource-group bluegreendeployment --slot staging
        continue-on-error: true  # Allow this step to succeed even if the slot already exists

      # Configure Web App for Docker and deploy to staging slot
      - name: 'Deploy Docker Image to Azure Web App Slot'
        run: |
          az webapp config container set --name 'ReactAppDemo' \
            --resource-group 'bluegreendeployment' \
            --slot 'staging' \
            --docker-custom-image-name ${{ secrets.DOCKERHUB_USERNAME }}/react-img:latest \
            --docker-registry-server-url https://index.docker.io/v1/ \
            --docker-registry-server-user ${{ secrets.DOCKERHUB_USERNAME }} \
            --docker-registry-server-password ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: 'Swap staging slot with production'
        run: |
          az webapp deployment slot swap --name 'ReactAppDemo' --resource-group 'bluegreendeployment' --slot 'staging' --target-slot 'production'
